div
    div.markdown-wrapper
        :markdown-it(linkify)
            # hz-anim
            hz-anim helps to perform animations synchronizing  with the haztivity resources flow.

            hz-anim uses [velocity.js](http://velocityjs.org/) under the hood.
            ## Dependencies
            - JQuery
            - velocity.js
            - haztivity/core
            ## Usage
            1. Import @haztivity/hz-anim
            2. Add HzAnim to the page
            3. Assign an event to listen with ```data-hz-anim-on```
            4. Set the properties o transition to anim with ```data-opt-hz-anim-do```
            #### Ts
            ```typescript
            import {PageFactory, Page, PageController, PageRegister} from "@haztivity/core";
            import template from "./page.pug";
            import {HzAnimResource} from "@haztivity/hz-anim";
            export let page: PageRegister = PageFactory.createPage(
                {
                    name: "myPage",
                    resources: [
                        HzAnimResource
                    ],
                    template: template
                }
            );
            ```
            #### Pug
            ```pug
            button(
                data-hz-resource="HzAnim"
                data-opt-hz-anim-on="click"
                data-opt-hz-anim-do={"rotateZ":"45deg"}
            ) Do to me
            ```
            or
            #### HTML
            ```html
            <button
                data-hz-resource="HzAnim"
                data-opt-hz-anim-on="click"
                data-opt-hz-anim-do='{"rotateZ":"45deg"}'
            >
                Do to me
            </button>
            ```

            This will perform a rotate in the Z axis from 45 degrees.

            By default, the animation is performed to the item itself, to see how to apply the animation to other element plase go to [Apply animation to other targets](#markdown-header-apply-animation-to-other-targets)

            HzAnim uses [velocity.js](http://velocityjs.org/), a very **efficient** js library to perform animations.

            It's possible to animate any of the properties and transitions available in velocity.js and use all the options.
        button(data-hz-resource="HzAnim"
        data-opt-hz-anim-on="click"
        data-opt-hz-anim-do='{"rotateZ":"45deg"}') Do to me

    div.markdown-wrapper
        :markdown-it(linkify)
            ## Apply animation to other targets
            To apply the transforms to other elements, use the ```data-opt-hz-anim-to```, accepts any jquery valid selector.
            See [jquery selectors](https://api.jquery.com/category/selectors/) for more info.
            ### Example
            #### Pug
            ```pug
            button(
                data-hz-resource="HzAnim"
                data-opt-hz-anim-on="click"
                data-opt-hz-anim-do={"rotateZ":"45deg"}
                data-opt-hz-anim-to=".target"
            ) Do to .target

            button.target Target
            ```
            or
            #### HTML
            ```html
            <button
                data-hz-resource="HzAnim"
                data-opt-hz-anim-on="cli###ck"
                data-opt-hz-anim-do='{"rotateZ":"45deg"}'
                data-opt-hz-anim-to=".target"
            >
                Do to .target
            </button>
            <button class="target">Target</button>
            ```

        button(data-hz-resource="HzAnim"
        data-opt-hz-anim-on="click"
        data-opt-hz-anim-do='{"rotateZ":"40deg"}'
        data-opt-hz-anim-to=".target") Do to .target

        button.target .target
    div.markdown-wrapper
        :markdown-it(linkify)
            ## Increment / decrement
            Velocity.js allows to increment/decrement a property, this is allows to create complex animations with an easiest configuration.

            To set an increment use `+=` and to decrement use `-=`
            ### Pug
            ```pug
            button.targetIncrement(
               data-hz-resource="HzAnim"
               data-opt-hz-anim-on="click"
               data-opt-hz-anim-do={"rotateZ": "+=45deg", "scale": "+=0.4","colorRed":"+=80","marginRight":"+=0.5em"}
            ) Increase
            button(
               data-hz-resource="HzAnim"
               data-opt-hz-anim-to=".targetIncrement",
               data-opt-hz-anim-on="click"
               data-opt-hz-anim-do={"rotateZ": "-=45deg", "scale": "-=0.4","colorRed":"-=80","marginRight":"-=0.5em"}
            ) Decrease
            ```
            or
            ### HTML
            ```html
            <button
                class="targetIncrement"
                data-hz-resource="HzAnim"
                data-opt-hz-anim-on="click"
                data-opt-hz-anim-do='{"rotateZ": "+=45deg", "scale": "+=0.4","colorRed":"+=80","marginRight":"+=0.5em"}'
            >
                Increase
            </button>
            <button
                data-opt-hz-anim-to=".targetIncrement",
                data-opt-hz-anim-on="click"
                data-opt-hz-anim-do='{"rotateZ": "-=45deg", "scale": "-=0.4","colorRed":"-=80","marginRight":"-=0.5em"}'
            >
                Decrease
            </button>
            ```
        button.targetIncrement(
            data-hz-resource="HzAnim"
            data-opt-hz-anim-on="click"
            data-opt-hz-anim-do={"rotateZ": "+=45deg", "scale": "+=0.4","colorRed":"+=80","marginRight":"+=0.5em"}
        ) Increase
        button(
            data-hz-resource="HzAnim"
            data-opt-hz-anim-to=".targetIncrement",
            data-opt-hz-anim-on="click"
            data-opt-hz-anim-do={"rotateZ": "-=45deg", "scale": "-=0.4","colorRed":"-=80","marginRight":"-=0.5em"}
        ) Decrease
    div.markdown-wrapper
        :markdown-it(linkify)
            ## Repeatable
            By default, the animation is repeatable and could be performed multiple times.

            For one time execution, set the `repeatable` option to false
            ### Pug
            ```pug
                button(
                    data-hz-resource="HzAnim"
                    data-opt-hz-anim-repeatable="false"
                    data-opt-hz-anim-on="click"
                    data-opt-hz-anim-do={"rotateZ": "+=45deg"}
                ) Do to me one time
            ```
            or
            ### HTML
            ```html
            <button
                data-hz-resource="HzAnim"
                data-opt-hz-anim-repeatable="false"
                data-opt-hz-anim-on="click"
                data-opt-hz-anim-do='{"rotateZ":"+=45deg"}'
            >
                Do to me one time
            </button>
        button(
            data-hz-resource="HzAnim"
            data-opt-hz-anim-repeatable="false"
            data-opt-hz-anim-on="click"
            data-opt-hz-anim-do={"rotateZ": "+=45deg"}
        ) Do to me one time

        button(
            data-hz-resource="HzAnim"
            data-opt-hz-anim-on="click"
            data-opt-hz-anim-do={"rotateZ": "+=45deg"}
        ) Do to me infinite times